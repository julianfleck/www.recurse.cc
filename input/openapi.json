{"openapi":"3.1.0","info":{"title":"RAGE API","description":"\n**Search and analyze your knowledge through intelligent semantic understanding**\n\nThis API transforms documents into structured semantic blocks - meaningful pieces of content that capture specific purposes, relationships, and insights. Rather than working with raw text chunks, you interact with intelligent content units that understand their role in communicating knowledge.\n\nWhen you upload documents, the system performs deep semantic analysis to identify and extract different types of meaning: claims that make assertions, evidence that supports arguments, definitions that establish understanding, methods that describe processes, and insights that reveal connections. Each semantic block maintains its relationship to other blocks and its source material, creating a rich knowledge graph where information connects naturally.\n\nThe vector search capabilities operate on these semantic structures using embeddings that capture both content meaning and structural purpose. This means you can search not just for topics, but for specific types of information - finding supporting evidence for a claim, locating definitions of concepts, or discovering methodological approaches to problems.\n\nKey capabilities include:\n- **Semantic Block Extraction**: Documents become networks of purpose-driven content units\n- **Intelligent Search**: Find information by meaning and purpose, not just keywords  \n- **Knowledge Graph Navigation**: Explore relationships between concepts across documents\n- **Source Attribution**: Every piece of information traces back to its original context\n- **Multi-Strategy Retrieval**: Choose search approaches optimized for different discovery needs\n\nThe system maintains complete traceability from semantic blocks back to their source documents and sections, enabling accurate citation and context preservation while supporting sophisticated knowledge discovery workflows.\n","contact":{"name":"RAGE Documentation","url":"https://github.com/yourusername/trails-rage-pipeline"},"license":{"name":"License","url":"https://github.com/yourusername/trails-rage-pipeline/blob/main/LICENSE"},"version":"0.2.0"},"servers":[{"url":"http://localhost:8000","description":"Local development server"}],"paths":{"/guest/register":{"post":{"tags":["Authentication"],"summary":"Guest Register","description":"Register a guest user and return a Guest JWT.\n\nIdempotent: if a guest with the same fingerprint exists (by optional header), reuse it.","operationId":"guest_register_guest_register_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/guest/refresh":{"post":{"tags":["Authentication"],"summary":"Guest Refresh","description":"Refresh Guest JWT (requires valid guest token).","operationId":"guest_refresh_guest_refresh_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"HTTPBearer":[]}]}},"/users/me":{"get":{"tags":["Users"],"summary":"Get current user profile","description":"Return current user's profile (same payload as /auth/me).","operationId":"get_current_user_profile","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"HTTPBearer":[]}]}},"/users/me/usage":{"get":{"tags":["Users"],"summary":"Get current usage and quotas","description":"Return current user's usage and quota limits.\n\nMirrors /api-keys/usage, but placed under conventional /users/me.","operationId":"get_current_user_usage","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"HTTPBearer":[]}]}},"/users/me/api-keys":{"get":{"tags":["Users"],"summary":"List API keys","operationId":"list_user_api_keys","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ApiKeyResponse"},"type":"array","title":"Response List User Api Keys"}}}}},"security":[{"HTTPBearer":[]}]},"post":{"tags":["Users"],"summary":"Create API key","operationId":"create_user_api_key","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiKeyCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Create User Api Key"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/users/me/api-keys/{key_id}":{"delete":{"tags":["Users"],"summary":"Delete API key","operationId":"delete_user_api_key","security":[{"HTTPBearer":[]}],"parameters":[{"name":"key_id","in":"path","required":true,"schema":{"type":"string","title":"Key Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Delete User Api Key"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users/update":{"post":{"tags":["admin"],"summary":"Update User Limits Flat","description":"Admin utility: update any supported per-user limit fields in a flat POST body.\n\nAccepts any subset of UserLimitsUpdate fields using their property names.","operationId":"update_user_limits_flat_admin_users_update_post","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"query","required":true,"schema":{"type":"string","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Update"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users/search":{"get":{"tags":["admin"],"summary":"Search Users","description":"Search and list users with optional filtering.\n\nRequires ROOT access.","operationId":"search_users_admin_users_search_get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"query","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Search by username or email","title":"Query"},"description":"Search by username or email"},{"name":"role","in":"query","required":false,"schema":{"anyOf":[{"$ref":"#/components/schemas/UserRole"},{"type":"null"}],"description":"Filter by role","title":"Role"},"description":"Filter by role"},{"name":"is_active","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter by active status","title":"Is Active"},"description":"Filter by active status"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":500,"minimum":1,"description":"Maximum number of results","default":50,"title":"Limit"},"description":"Maximum number of results"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","minimum":0,"description":"Number of results to skip","default":0,"title":"Offset"},"description":"Number of results to skip"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserLookupResponse"},"title":"Response Search Users Admin Users Search Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users/{user_id}":{"get":{"tags":["admin"],"summary":"Get User","description":"Get detailed information about a specific user.\n\nRequires ROOT access.","operationId":"get_user_admin_users__user_id__get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserLookupResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["admin"],"summary":"Delete User","description":"Delete a user and all their data.\n\nWARNING: This is irreversible!\nRequires ROOT access.","operationId":"delete_user_admin_users__user_id__delete","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users":{"post":{"tags":["admin"],"summary":"Create User","description":"Create a new user with admin privileges.\n\nRequires ROOT access.","operationId":"create_user_admin_users_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdminUserCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserLookupResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/admin/users/{user_id}/role":{"patch":{"tags":["admin"],"summary":"Update User Role","description":"Update user roles (add, remove, or set).\n\nRequires ROOT access.","operationId":"update_user_role_admin_users__user_id__role_patch","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRoleUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users/{user_id}/suspend":{"patch":{"tags":["admin"],"summary":"Suspend User","description":"Suspend or unsuspend a user.\n\nRequires ROOT access.","operationId":"suspend_user_admin_users__user_id__suspend_patch","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSuspension"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users/{user_id}/limits":{"patch":{"tags":["admin"],"summary":"Update User Limits","description":"Update custom rate limits and quotas for a user.\n\nRequires ROOT access.","operationId":"update_user_limits_admin_users__user_id__limits_patch","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserLimitsUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/users/{user_id}/password":{"patch":{"tags":["admin"],"summary":"Update User Password","description":"Deprecated: Passwords are managed by Auth0. This endpoint is a no-op.","operationId":"update_user_password_admin_users__user_id__password_patch","security":[{"HTTPBearer":[]}],"parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/internal/query":{"post":{"tags":["Internal Admin"],"summary":"Internal Query","description":"Internal-only Cypher query execution for admin and system operations.\n\n**INTERNAL USE ONLY**\n\nThis endpoint is used by:\n- Background workers for document processing\n- Admin maintenance scripts\n- System health checks and diagnostics\n\n**Access Control:**\n- Requires ROOT access\n- Not exposed in public API documentation\n- Proper audit logging\n\n**Features:**\n- Optional scope bypassing for admin operations\n- Query timeout protection\n- Result size limits\n- Comprehensive error handling","operationId":"internal_query_admin_internal_query_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalQueryRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Internal Query Admin Internal Query Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/admin/internal/batch":{"post":{"tags":["Internal Admin"],"summary":"Internal Batch","description":"Internal-only batch operations for system processes.\n\n**INTERNAL USE ONLY**\n\nUsed by document ingestion workers and system maintenance.\nRequires ROOT access and provides audit logging.","operationId":"internal_batch_admin_internal_batch_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalBatchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Internal Batch Admin Internal Batch Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/admin/internal/stats":{"get":{"tags":["Internal Admin"],"summary":"Internal Stats","description":"Internal graph statistics for admin monitoring.\n\n**INTERNAL USE ONLY**\n\nProvides comprehensive graph statistics with admin-level access.","operationId":"internal_stats_admin_internal_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Internal Stats Admin Internal Stats Get"}}}}},"security":[{"HTTPBearer":[]}]}},"/node/{node_id}/delete":{"delete":{"tags":["Graph Navigation"],"summary":"Delete Node","description":"Delete a single non-auth graph node by id.\n\nSafety rules:\n- Disallows deletion of authentication/identity nodes.\n- Disallows deletion of `Document` nodes (use /documents/{id} instead to preserve multi-owner safety).\n- Uses scoped client to enforce data ownership/visibility.\n- Optionally removes zero-degree orphans and disconnected metadata clusters.","operationId":"delete_node_node__node_id__delete_delete","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","description":"Node ID to delete","title":"Node Id"},"description":"Node ID to delete"},{"name":"dry_run","in":"query","required":false,"schema":{"type":"boolean","description":"If true, returns a deletion plan without performing changes","default":false,"title":"Dry Run"},"description":"If true, returns a deletion plan without performing changes"},{"name":"cleanup_orphans","in":"query","required":false,"schema":{"type":"boolean","description":"If true, remove zero-degree orphan nodes after deletion (excludes auth and Document labels)","default":true,"title":"Cleanup Orphans"},"description":"If true, remove zero-degree orphan nodes after deletion (excludes auth and Document labels)"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Delete Node Node  Node Id  Delete Delete"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}":{"get":{"tags":["Graph Navigation"],"summary":"Get Node","description":"Retrieve a single node with flexible field selection.\n\n**Purpose**: Retrieve a single node with flexible field selection and filtering options.\n\n**Returns**: A single node object with fields controlled by the filters. Used for getting\ndetailed information about a specific document, section, or frame.\n\n## Field Sets\n\n- `basic`: Essential fields only (id, title, type)\n- `content`: Content fields (id, title, text, summary, description, type)\n- `metadata`: Metadata fields (id, title, created_at, updated_at, tags, source, type)\n- `relationships`: Graph fields (id, title, relationships, parent_ids, child_ids, type)\n- `frame_detail`: Frame-specific fields (id, title, text, type, frame_type, slots, confidence_score, summary, children)\n- `all`: All available fields\n\n## Custom Field Control\n\n- `include_fields`: Add specific fields beyond the field set\n- `exclude_fields`: Remove specific fields from the field set\n\n## Examples\n\n```bash\n# Basic node information\nGET /node/abc123?field_set=basic\n\n# Content with additional metadata\nGET /node/abc123?field_set=content&include_fields=created_at,tags\n\n# All fields except embeddings\nGET /node/abc123?field_set=all&exclude_fields=embeddings\n```","operationId":"get_node_node__node_id__get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","description":"Node ID to retrieve","title":"Node Id"},"description":"Node ID to retrieve","example":"doc_ai_research_2024"},{"name":"field_set","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Field set: basic, content, metadata, relationships, frame_detail, all","title":"Field Set"},"description":"Field set: basic, content, metadata, relationships, frame_detail, all","example":"basic"},{"name":"include_fields","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated additional fields to include","title":"Include Fields"},"description":"Comma-separated additional fields to include","example":"tags,confidence_score"},{"name":"exclude_fields","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated fields to exclude","title":"Exclude Fields"},"description":"Comma-separated fields to exclude","example":"embeddings"},{"name":"frame_semantics","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"description":"DEPRECATED: Use include_fields=slots,confidence_score instead","title":"Frame Semantics"},"description":"DEPRECATED: Use include_fields=slots,confidence_score instead","example":false}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Node Node  Node Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Graph Navigation"],"summary":"Get Node Post","description":"Retrieve a single node using POST with full unified filtering support.\n\n**Purpose**: Same as GET endpoint but supports complex filtering through JSON body.\n\n**Returns**: A single node object with fields controlled by the filters.\n\n## Request Structure\n\n```json\n{\n  \"filters\": {\n    \"field_set\": \"content\",\n    \"include_fields\": [\"relationships\", \"confidence_score\"],\n    \"exclude_fields\": [\"embeddings\"],\n    \"frame_types\": [\"claim\", \"evidence\"],\n    \"min_confidence\": 0.8\n  }\n}\n```\n\n## Examples\n\n```bash\n# Basic request\nPOST /node/abc123\n{\n  \"filters\": {\n    \"field_set\": \"basic\"\n  }\n}\n\n# Complex filtering\nPOST /node/abc123\n{\n  \"filters\": {\n    \"field_set\": \"content\",\n    \"include_fields\": [\"relationships\"],\n    \"frame_types\": [\"claim\", \"evidence\"],\n    \"min_confidence\": 0.7\n  }\n}\n```","operationId":"get_node_post_node__node_id__post","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","description":"Node ID to retrieve","title":"Node Id"},"description":"Node ID to retrieve"}],"requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/NodeRequest"},{"type":"null"}],"title":"Request"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Node Post Node  Node Id  Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/text":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Text","description":"Get the text content of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?fields=id,text","operationId":"get_node_text_node__node_id__text_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/summary":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Summary","description":"Get the summary of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?fields=id,summary","operationId":"get_node_summary_node__node_id__summary_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/title":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Title","description":"Get the title of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?fields=id,title","operationId":"get_node_title_node__node_id__title_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/metadata":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Metadata","description":"Get the metadata of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?field_set=metadata","operationId":"get_node_metadata_node__node_id__metadata_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/basic":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Basic","description":"Get basic fields of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?field_set=basic","operationId":"get_node_basic_node__node_id__basic_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/content":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Content","description":"Get content fields of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?field_set=content","operationId":"get_node_content_node__node_id__content_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/relationships":{"get":{"tags":["Graph Navigation"],"summary":"Get Node Relationships","description":"Get relationship fields of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?field_set=relationships","operationId":"get_node_relationships_node__node_id__relationships_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/node/{node_id}/all":{"get":{"tags":["Graph Navigation"],"summary":"Get Node All","description":"Get all fields of a node.\n\nConvenience endpoint equivalent to: GET /node/{id}?field_set=all","operationId":"get_node_all_node__node_id__all_get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tree/{node_id}":{"get":{"tags":["Graph Navigation"],"summary":"Get Tree","description":"Retrieve a hierarchical tree structure with configurable traversal and field selection.\n\n**Purpose**: Retrieve a hierarchical tree structure starting from a node, with configurable\ntraversal direction and depth.\n\n**Returns**: A tree structure containing the root node and its related nodes (children, parents,\nor both) up to the specified depth. Always includes all sections and frames within the traversal scope.\n\n## Search Parameters (HOW to traverse)\n\n- `direction`: Traversal direction (children, parents, both)\n- `depth`: Maximum traversal depth (0-20)\n- `limit`: Maximum number of nodes to return\n\n## Field Selection (WHAT to return)\n\n- `field_set`: Predefined field set (basic, content, metadata, relationships, all)\n- `include_fields`: Additional fields to include\n- `exclude_fields`: Fields to exclude\n\n## Filtering Options\n\n- `node_types`: Filter by node types (Document, Section, Frame)\n- `relationship_types`: Filter by relationship types (CONTAINS, SUPPORTS, etc.)\n- `frame_types`: Filter by frame types (claim, evidence, method, etc.)\n\n## Examples\n\n```bash\n# Get children with basic fields\nGET /tree/abc123?direction=children&depth=3&field_set=basic\n\n# Get parents with content and relationships\nGET /tree/abc123?direction=parents&depth=2&field_set=content&include_fields=relationships\n\n# Filter by node types\nGET /tree/abc123?direction=children&node_types=Frame,Section&field_set=content\n```","operationId":"get_tree_tree__node_id__get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","description":"Root node ID for tree traversal","title":"Node Id"},"description":"Root node ID for tree traversal","example":"doc_ai_research_2024"},{"name":"direction","in":"query","required":false,"schema":{"$ref":"#/components/schemas/Direction","description":"Direction: children, parents, both","default":"children"},"description":"Direction: children, parents, both","example":"children"},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":20,"minimum":0,"description":"Maximum depth of traversal (0-20)","default":5,"title":"Depth"},"description":"Maximum depth of traversal (0-20)","example":3},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"description":"Maximum number of nodes to return","default":100,"title":"Limit"},"description":"Maximum number of nodes to return","example":50},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","description":"Field set: basic, content, metadata, relationships, frame_detail, all","default":"basic","title":"Field Set"},"description":"Field set: basic, content, metadata, relationships, frame_detail, all","example":"content"},{"name":"include_fields","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated additional fields to include","title":"Include Fields"},"description":"Comma-separated additional fields to include","example":"relationships,confidence_score"},{"name":"exclude_fields","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated fields to exclude","title":"Exclude Fields"},"description":"Comma-separated fields to exclude","example":"embeddings"},{"name":"node_types","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated node types to include","title":"Node Types"},"description":"Comma-separated node types to include","example":"Frame,Section"},{"name":"relationship_types","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated relationship types","title":"Relationship Types"},"description":"Comma-separated relationship types","example":"CONTAINS,SUPPORTS"},{"name":"frame_types","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated frame types","title":"Frame Types"},"description":"Comma-separated frame types","example":"claim,evidence"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Tree Tree  Node Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Graph Navigation"],"summary":"Get Tree Post","description":"Retrieve a tree structure using POST with full unified filtering support.\n\n**Purpose**: Same as GET endpoint but supports complex filtering through JSON body.\n\n**Returns**: A tree structure with fields controlled by the filters.\n\n## Request Structure\n\n```json\n{\n  \"direction\": \"children\",\n  \"depth\": 3,\n  \"limit\": 100,\n  \"filters\": {\n    \"field_set\": \"content\",\n    \"include_fields\": [\"relationships\"],\n    \"node_types\": [\"Frame\", \"Section\"],\n    \"frame_types\": [\"claim\", \"evidence\"],\n    \"min_confidence\": 0.8\n  }\n}\n```\n\n## Examples\n\n```bash\n# Basic tree traversal\nPOST /tree/abc123\n{\n  \"direction\": \"children\",\n  \"depth\": 2,\n  \"filters\": {\n    \"field_set\": \"basic\"\n  }\n}\n\n# Complex filtering\nPOST /tree/abc123\n{\n  \"direction\": \"children\",\n  \"depth\": 3,\n  \"filters\": {\n    \"field_set\": \"content\",\n    \"include_fields\": [\"relationships\"],\n    \"node_types\": [\"Frame\"],\n    \"frame_types\": [\"claim\", \"evidence\"],\n    \"min_confidence\": 0.7\n  }\n}\n```","operationId":"get_tree_post_tree__node_id__post","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","description":"Root node ID for tree traversal","title":"Node Id"},"description":"Root node ID for tree traversal"}],"requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/TreeRequest"},{"type":"null"}],"title":"Request"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Tree Post Tree  Node Id  Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tree/children/{node_id}":{"get":{"tags":["Graph Navigation"],"summary":"Get Children","description":"Get children of a node as a tree structure.","operationId":"get_children_tree_children__node_id__get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tree/parents/{node_id}":{"get":{"tags":["Graph Navigation"],"summary":"Get Parents","description":"Get parents of a node as a tree structure.","operationId":"get_parents_tree_parents__node_id__get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tree/neighbors/{node_id}":{"get":{"tags":["Graph Navigation"],"summary":"Get Neighbors","description":"Get immediate neighbors of a node.","operationId":"get_neighbors_tree_neighbors__node_id__get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/tree/root/{node_id}":{"get":{"tags":["Graph Navigation"],"summary":"Get Root Path","description":"Get the path from a node to its root document.","operationId":"get_root_path_tree_root__node_id__get","parameters":[{"name":"node_id","in":"path","required":true,"schema":{"type":"string","title":"Node Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/":{"get":{"tags":["Search"],"summary":"Search (tokens and filters)","operationId":"search_general","parameters":[{"name":"query","in":"query","required":false,"schema":{"type":"string","description":"Token-based search query","default":"","title":"Query"},"description":"Token-based search query"},{"name":"id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Single node ID","title":"Id"},"description":"Single node ID"},{"name":"ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated IDs","title":"Ids"},"description":"Comma-separated IDs"},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","description":"Field set: basic, content, metadata, all","default":"basic","title":"Field Set"},"description":"Field set: basic, content, metadata, all"},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"description":"Traversal depth","default":0,"title":"Depth"},"description":"Traversal depth"},{"name":"direction","in":"query","required":false,"schema":{"type":"string","pattern":"^(children|parents|both)$","description":"Traversal direction for subtrees","default":"children","title":"Direction"},"description":"Traversal direction for subtrees"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"description":"Max results","default":20,"title":"Limit"},"description":"Max results"},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number (1-based)","default":1,"title":"Page"},"description":"Page number (1-based)"},{"name":"min_score","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"description":"Min similarity score","default":0.0,"title":"Min Score"},"description":"Min similarity score"},{"name":"include_original_similarity","in":"query","required":false,"schema":{"type":"boolean","description":"If true, include original_similarity fields in outputs when available","default":false,"title":"Include Original Similarity"},"description":"If true, include original_similarity fields in outputs when available"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Search General"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/candidates":{"post":{"tags":["Search"],"summary":"Semantic candidates (vector search)","description":"Find content similar to your search query with optional hierarchical graph expansion.\n\n**Purpose**: Perform vector similarity search with optional hierarchical graph expansion\nto find semantically related content organized as a tree structure.\n\n**Returns**: A hierarchical tree structure starting from search results, with configurable\ntraversal direction and depth. Always includes all sections and frames within the traversal scope.\n\n## Search Parameters (HOW to search)\n\n- `query`: The search query text\n- `limit`: Number of results to return (1-100)\n- `min_score`: Minimum similarity score threshold (0.0-1.0)\n- `search_strategy`: Search algorithm (multi_index, vector, hybrid, graph_aware, semantic)\n- `reranking_strategy`: Result ranking strategy (balanced, comprehensive, focused, diversity, relevance)\n\n## Hierarchical Parameters\n\n- `traverse`: Enable graph traversal for hierarchical results (default: true)\n- `depth`: Maximum depth of traversal (0-20, default: 2)\n\n## Field Selection (WHAT to return)\n\n- `field_set`: Predefined field set (basic, content, metadata, relationships, frame_detail, all)\n- `include_fields`: Additional fields to include beyond the field set\n- `exclude_fields`: Fields to exclude from the field set\n\n## Filtering Options\n\n- `frame_types`: Filter by frame types (claim, evidence, method, etc.)\n- `node_types`: Filter by node types (Document, Section, Frame)\n- `document_ids`: Filter by specific document IDs\n- `date_from`, `date_to`: Temporal filtering\n- `tags`, `authors`, `sources`: Content filtering\n\n## Examples\n\n**Basic Hierarchical Search**:\n```json\n{\n  \"query\": \"machine learning algorithms\",\n  \"traverse\": true,\n  \"depth\": 3,\n  \"limit\": 50,\n  \"filters\": {\n    \"field_set\": \"content\"\n  }\n}\n```\n\n**Flat Search (No Traversal)**:\n```json\n{\n  \"query\": \"machine learning algorithms\",\n  \"traverse\": false,\n  \"filters\": {\n    \"field_set\": \"basic\"\n  }\n}\n```\n\n**Advanced Filtering with Traversal**:\n```json\n{\n  \"query\": \"machine learning algorithms\",\n  \"traverse\": true,\n  \"depth\": 2,\n  \"limit\": 100,\n  \"filters\": {\n    \"field_set\": \"content\",\n    \"frame_types\": [\"claim\", \"evidence\"],\n    \"date_from\": \"2023-01-01\"\n  }\n}\n```","operationId":"search_candidates","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CandidatesRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Search Candidates"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/semantic":{"get":{"tags":["Search"],"summary":"Search for semantic concepts","operationId":"searchSemantic","parameters":[{"name":"query","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Query"}},{"name":"id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"}},{"name":"ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ids"}},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","default":"basic","title":"Field Set"}},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"default":0,"title":"Depth"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"default":20,"title":"Limit"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"min_score","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"default":0.0,"title":"Min Score"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Searchsemantic"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/document":{"get":{"tags":["Search"],"summary":"Search for documents","operationId":"searchDocument","parameters":[{"name":"query","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Query"}},{"name":"id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"}},{"name":"ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ids"}},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","default":"basic","title":"Field Set"}},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"default":0,"title":"Depth"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"default":20,"title":"Limit"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"min_score","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"default":0.0,"title":"Min Score"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Searchdocument"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/frames":{"get":{"tags":["Search"],"summary":"Search for frames","operationId":"searchFrames","parameters":[{"name":"query","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Query"}},{"name":"id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"}},{"name":"ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ids"}},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","default":"basic","title":"Field Set"}},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"default":0,"title":"Depth"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"default":20,"title":"Limit"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"min_score","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"default":0.0,"title":"Min Score"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Searchframes"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/tags":{"get":{"tags":["Search"],"summary":"Search for tags","operationId":"searchTags","parameters":[{"name":"query","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Query"}},{"name":"id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"}},{"name":"ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ids"}},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","default":"basic","title":"Field Set"}},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"default":0,"title":"Depth"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"default":20,"title":"Limit"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"min_score","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"default":0.0,"title":"Min Score"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Searchtags"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/search/text":{"get":{"tags":["Search"],"summary":"Search for text","operationId":"searchText","parameters":[{"name":"query","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Query"}},{"name":"id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id"}},{"name":"ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Ids"}},{"name":"field_set","in":"query","required":false,"schema":{"type":"string","default":"basic","title":"Field Set"}},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"default":0,"title":"Depth"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"default":20,"title":"Limit"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"min_score","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"default":0.0,"title":"Min Score"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Searchtext"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/graph/batch":{"post":{"tags":["Graph"],"summary":"Batch Operations","description":"Execute multiple graph operations atomically using scoped client.\n\n**SECURITY NOTE:** This endpoint now properly uses scoped client methods\nto ensure data isolation and prevent unauthorized access to other users' data.\n\n**Features:**\n- **Data Scoping**: All operations respect user/API key data boundaries\n- **Atomic Transactions**: All-or-nothing operation guarantee\n- **High Performance**: Batch operations minimize round trips\n- **Mixed Operations**: Combine node and edge creation\n- **Auto ID Generation**: Automatic content-based ID generation\n\n**Use Cases:**\n- Document ingestion by workers\n- Bulk data imports with proper scoping\n- System maintenance operations","operationId":"batch_operations_graph_batch_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/V2BatchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Batch Operations Graph Batch Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/graph/stats":{"get":{"tags":["Graph"],"summary":"Get Graph Stats","description":"Get comprehensive graph statistics.\n\n**Features:**\n- **Node Counts**: Total nodes by type and label\n- **Relationship Counts**: Total relationships by type\n- **Graph Metrics**: Density, connectivity, depth analysis\n- **Performance Data**: Query execution times and database info\n\n**Statistics Included:**\n- **Total Counts**: Nodes, relationships, node types\n- **Document Analysis**: Documents, sections, frames breakdown\n- **Relationship Types**: CONTAINS, SUPPORTS, ILLUSTRATES, etc.\n- **Graph Health**: Orphaned nodes, disconnected components\n- **Performance**: Response times, index utilization\n\n**Response Format:**\n```json\n{\n  \"total_nodes\": 15420,\n  \"total_relationships\": 28650,\n  \"node_counts_by_type\": {\n    \"Document\": 145,\n    \"Section\": 1240,\n    \"Frame\": 8950,\n    \"Chunk\": 5085\n  },\n  \"relationship_counts_by_type\": {\n    \"CONTAINS\": 1385,\n    \"SUPPORTS\": 12400,\n    \"ILLUSTRATES\": 8950,\n    \"CITES\": 5915\n  },\n  \"graph_metrics\": {\n    \"avg_degree\": 3.71,\n    \"max_depth\": 8,\n    \"connected_components\": 1\n  },\n  \"query_time\": 0.125\n}\n```\n\n**Use Cases:**\n- System monitoring and health checks\n- Capacity planning and optimization\n- Data quality assessment\n- Performance benchmarking","operationId":"get_graph_stats_graph_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Get Graph Stats Graph Stats Get"}}}}}}},"/graph/maintenance/track-status":{"post":{"tags":["Graph"],"summary":"Track Node Maintenance Status","description":"Track node processing status for maintenance system.\n\nThis endpoint stores processing status information for nodes that failed\nor partially completed processing, enabling the maintenance system to\nidentify and retry failed operations.\n\n**Request Format:**\n```json\n{\n  \"node_id\": \"section_abc123\",\n  \"status\": \"NEEDS_EMBEDDING_RETRY\",\n  \"error_details\": \"Rate limit exceeded\",\n  \"retry_count\": 1,\n  \"last_updated\": \"2024-01-01T12:00:00Z\",\n  \"task_id\": \"celery_task_456\"\n}\n```\n\n**Status Values:**\n- `COMPLETE`: Node fully processed\n- `NEEDS_EMBEDDING_RETRY`: Embedding generation failed\n- `NEEDS_FRAME_RETRY`: Frame extraction failed\n- `NEEDS_METADATA_RETRY`: Metadata extraction failed\n- `EMBEDDING_FAILED`: Final embedding failure\n- `FRAME_FAILED`: Final frame failure\n- `METADATA_FAILED`: Final metadata failure\n- `PARTIAL_SUCCESS`: Some operations succeeded","operationId":"track_node_maintenance_status_graph_maintenance_track_status_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Request"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/graph/maintenance/failed-nodes":{"get":{"tags":["Graph"],"summary":"Get Failed Nodes","description":"Get nodes that need maintenance (failed or partial processing).\n\nThis endpoint retrieves nodes that have failed processing or are in partial\nstates, enabling the maintenance system to identify and retry operations.\n\n**Features:**\n- **Status Filtering**: Filter by specific failure types\n- **Batch Processing**: Get up to 1000 nodes for batch operations\n- **Exclude Complete**: Option to filter out completed nodes\n- **Retry Information**: Includes retry counts and error details\n\n**Response Format:**\n```json\n{\n  \"failed_nodes\": [\n    {\n      \"node_id\": \"section_abc123\",\n      \"status\": \"NEEDS_EMBEDDING_RETRY\",\n      \"error_details\": \"Rate limit exceeded\",\n      \"retry_count\": 1,\n      \"last_updated\": \"2024-01-01T12:00:00Z\",\n      \"task_id\": \"celery_task_456\"\n    }\n  ],\n  \"total_found\": 15,\n  \"summary\": {\n    \"NEEDS_EMBEDDING_RETRY\": 8,\n    \"NEEDS_FRAME_RETRY\": 4,\n    \"PARTIAL_SUCCESS\": 3\n  }\n}\n```","operationId":"get_failed_nodes_graph_maintenance_failed_nodes_get","parameters":[{"name":"status_filter","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filter by status","title":"Status Filter"},"description":"Filter by status"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"default":100,"title":"Limit"}},{"name":"include_completed","in":"query","required":false,"schema":{"type":"boolean","description":"Include completed nodes","default":false,"title":"Include Completed"},"description":"Include completed nodes"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Failed Nodes Graph Maintenance Failed Nodes Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/documents":{"post":{"tags":["Documents"],"summary":"Create document manually","description":"Add and ingest a new document with full processing pipeline.\n\nThis endpoint triggers the complete RAGE for document analysis and processing.\n\n## Processing Pipeline\n\n| Step | Description | Purpose |\n|------|-------------|---------|\n| **Deduplication Check** | Verifies if document already exists | Avoid duplicate processing |\n| **Document Storage** | Saves to vault with metadata | Persistent storage |\n| **Semantic Parsing** | Extracts sections and structure | Document organization |\n| **Frame Extraction** | Identifies semantic frames using AI | Meaning extraction |\n| **Graph Storage** | Persists to Neo4j with relationships | Knowledge graph building |\n| **Embedding Generation** | Creates vector embeddings for search | Semantic search capability |\n\n## Key Features\n\n| Feature | Description | Benefit |\n|---------|-------------|---------|\n| **Parallel Processing** | Large documents processed in chunks | Improved performance |\n| **Background Jobs** | Returns immediately with job ID for tracking | Non-blocking operation |\n| **Smart Deduplication** | Detects existing content automatically | Efficiency |\n| **Progress Tracking** | Monitor status via `/jobs/{job_id}` | Transparency |\n\n## Document Types\n\n| Type | Description | Use Case |\n|------|-------------|----------|\n| `research_paper` | Academic papers with formal structure | Scientific content |\n| `article` | News articles and blog posts | Journalistic content |\n| `personal_note` | Informal notes and reflections | Personal knowledge |\n| `reference_document` | Documentation and reference materials | Technical content |\n\n## Request Examples\n\n**Example Usage:**\n```bash\ncurl -X POST http://localhost:8000/documents \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"text\": \"Your document content here...\",\n    \"title\": \"Document Title\",\n    \"document_type_hint\": \"research_paper\",\n    \"metadata\": {\"author\": \"John Doe\", \"tags\": [\"AI\", \"research\"]}\n  }'\n```\n\nReturns a job ID for tracking processing status.","operationId":"create_document","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentRequest"}}}},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobStatusResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Documents"],"summary":"List documents","description":"List documents with basic pagination and field selection.\n\n**Purpose**: Simple document listing with pagination. For advanced filtering,\nsorting, and complex field selection, use the POST /documents/list endpoint.\n\n**Returns**: A paginated list of documents with basic field selection.\n\n## Field Sets\n\n- `basic`: Essential fields only (id, title, summary, type, index)\n- `content`: Content fields (id, title, summary, description, type, created_at)\n- `metadata`: Metadata fields (id, title, tags, source, author, metadata, type, created_at)\n- `relationships`: Graph fields (id, title, relationships, children, type, created_at)\n- `all`: All available fields\n\n## Examples\n\n```bash\n# Basic document list\nGET /documents?page=1&limit=10\n\n# Documents with content fields\nGET /documents?page=1&limit=10&field_set=content\n\n# For advanced filtering, use POST /documents/list\n```\n\n**Advanced Filtering**: For document filtering by type, tags, authors, date ranges,\nor custom field selection, use `POST /documents/list` with the unified filtering system.","operationId":"list_documents","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number (1-based)","default":1,"title":"Page"},"description":"Page number (1-based)","example":1},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Number of documents per page","default":20,"title":"Limit"},"description":"Number of documents per page","example":20},{"name":"field_set","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Field set: basic, content, metadata, relationships, all","default":"basic","title":"Field Set"},"description":"Field set: basic, content, metadata, relationships, all","example":"basic"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response List Documents"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/documents/upload":{"post":{"tags":["Documents"],"summary":"Upload document","description":"Add and ingest a document from multiple input sources.\n\nThis endpoint accepts documents in various formats:\n- **PDF files**: Upload PDF files that will be converted to markdown\n- **URLs**: Provide a URL to extract and process web content\n- **Text**: Direct text input (plain text or markdown)\n\n## Input Priority\nIf multiple inputs are provided, they are processed in this order:\n1. File upload (PDF)\n2. URL\n3. Text\n\n## File Upload Example\n```bash\ncurl -X POST http://localhost:8000/v2/documents/upload \\\n  -F \"file=@research_paper.pdf\" \\\n  -F \"title=AI Research Paper\" \\\n  -F \"document_type_hint=research_paper\" \\\n  -F 'metadata={\"author\": \"Dr. Smith\", \"year\": 2024}'\n```\n\n## URL Example\n```bash\ncurl -X POST http://localhost:8000/v2/documents/upload \\\n  -F \"url=https://example.com/article\" \\\n  -F \"document_type_hint=article\"\n```\n\n## Text Example\n```bash\ncurl -X POST http://localhost:8000/v2/documents/upload \\\n  -F \"text=# My Document\\n\\nThis is the content...\" \\\n  -F \"title=My Document\"\n```","operationId":"create_document_multipart","requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_create_document_multipart"}}}},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobStatusResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/documents/list":{"post":{"tags":["Documents"],"summary":"List documents (advanced)","description":"List documents using POST with full unified filtering support.\n\n**Purpose**: Advanced document listing with comprehensive filtering, sorting,\nand field selection through JSON body.\n\n**Search Parameters** (top-level):\n- `page`: Page number for pagination\n- `limit`: Documents per page\n\n**Filters Object**:\n- `field_set`: Standard field set selection\n- `include_fields`: Additional fields to include\n- `exclude_fields`: Fields to exclude\n- `document_ids`: Filter by document IDs\n- `document_types`: Filter by document types\n- `tags`: Filter by tags\n- `authors`: Filter by authors\n- `sources`: Filter by sources\n- `date_from`: Filter by creation date (from)\n- `date_to`: Filter by creation date (to)\n\n## Example Request\n\n```json\n{\n  \"page\": 1,\n  \"limit\": 10,\n  \"filters\": {\n    \"field_set\": \"content\",\n    \"include_fields\": [\"tags\", \"author\"],\n    \"document_types\": [\"research_paper\"],\n    \"tags\": [\"AI\", \"machine learning\"],\n    \"date_from\": \"2023-01-01\"\n  }\n}\n```","operationId":"list_documents_post","parameters":[{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"description":"Page number (1-based)","default":1,"title":"Page"},"description":"Page number (1-based)"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Number of documents per page","default":20,"title":"Limit"},"description":"Number of documents per page"}],"requestBody":{"content":{"application/json":{"schema":{"anyOf":[{"type":"object","additionalProperties":true},{"type":"null"}],"title":"Request"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response List Documents Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/documents/{doc_id}":{"get":{"tags":["Documents"],"summary":"Get document data","description":"Retrieve a specific document with full semantic structure and analysis results.\n\nThis endpoint provides comprehensive access to a processed document, including:\n\n**Document Information:**\n- Document metadata (title, creation date, text length)\n- Processing analysis (document type, language, frame count)\n- Hierarchical frame structure (if processed)\n\n**Data Sources:**\n1. **Primary**: Neo4j graph database (includes frames and relationships)\n2. **Fallback**: Vault storage (raw document data)\n\n**Query Parameters:**","operationId":"get_document","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","title":"Doc Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Documents"],"summary":"Delete document","description":"Delete a document by ID with ownership checks, safety analysis, and optional dry-run.\n\nBehavior:\n- If document has multiple owners, only the OWNS edge for the current scope is removed.\n- If frames have incoming references from other documents, deletion is blocked unless force=true.\n- When fully deleted, associated Sections and Frames are removed and the vault file is deleted.","operationId":"delete_document","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","title":"Doc Id"}},{"name":"dry_run","in":"query","required":false,"schema":{"type":"boolean","description":"If true, returns a deletion plan without performing any changes","default":false,"title":"Dry Run"},"description":"If true, returns a deletion plan without performing any changes"},{"name":"force","in":"query","required":false,"schema":{"type":"boolean","description":"If true, override safety checks for external references (does not override multi-owner safety)","default":false,"title":"Force"},"description":"If true, override safety checks for external references (does not override multi-owner safety)"},{"name":"cleanup_orphans","in":"query","required":false,"schema":{"type":"boolean","description":"If true, remove zero-degree orphan nodes after deletion (excludes auth and Document labels)","default":true,"title":"Cleanup Orphans"},"description":"If true, remove zero-degree orphan nodes after deletion (excludes auth and Document labels)"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Delete Document"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/documents/{doc_id}/processing-status":{"get":{"tags":["Documents"],"summary":"Get processing status","description":"Get detailed processing status for a document, including section-level completion.\n\nThis endpoint provides insights into document processing completion and identifies\nsections that may need retry or maintenance operations.\n\n**Features:**\n- **Section-level Status**: Shows which sections completed successfully\n- **Processing Gaps**: Identifies missing frames, embeddings, or metadata\n- **Resume Capability**: Information needed to resume failed processing\n- **Maintenance Ready**: Data for maintenance system operations\n\n**Response Format:**\n```json\n{\n  \"document_id\": \"doc_123\",\n  \"document_exists\": true,\n  \"sections_total\": 5,\n  \"sections_complete\": 3,\n  \"processing_completion_rate\": 60.0,\n  \"sections_needing_processing\": [\n    {\n      \"section_id\": \"section_456\",\n      \"index\": 3,\n      \"title\": \"Results Section\",\n      \"missing_operations\": {\n        \"frames\": false,\n        \"embeddings\": true,\n        \"metadata\": false\n      }\n    }\n  ],\n  \"recommendations\": {\n    \"action\": \"resume_processing\",\n    \"priority\": \"medium\",\n    \"estimated_completion_time\": \"2-3 minutes\"\n  }\n}\n```\n\n**Use Cases:**\n- Monitor document processing progress\n- Identify and retry failed operations\n- Maintenance system automation\n- Quality assurance checks","operationId":"get_document_processing_status","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","title":"Doc Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Document Processing Status"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/documents/{doc_id}/resume-processing":{"post":{"tags":["Documents"],"summary":"Resume processing","description":"Resume processing for a document with incomplete sections.\n\nThis endpoint identifies sections that failed during processing and resubmits\nthem for frame extraction, embedding generation, and metadata extraction.\n\n**Features:**\n- **Smart Resume**: Only processes incomplete sections\n- **Force Retry**: Option to retry all sections regardless of status\n- **Parallel Processing**: Uses existing Celery worker infrastructure\n- **Status Tracking**: Returns job ID for monitoring progress\n\n**Parameters:**\n- `force_retry_all`: If true, reprocess all sections even if complete\n\n**Use Cases:**\n- Recover from temporary LLM service outages\n- Retry sections that failed due to rate limiting\n- Update processing after system improvements\n- Maintenance system automation","operationId":"resume_document_processing","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","title":"Doc Id"}},{"name":"force_retry_all","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Force Retry All"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobStatusResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/writing/answer":{"get":{"tags":["Writing"],"summary":"Answer Question","description":"Answer a question with sources and reasoning using semantic retrieval.","operationId":"answer_question_writing_answer_get","parameters":[{"name":"query","in":"query","required":true,"schema":{"type":"string","description":"Question to answer","title":"Query"},"description":"Question to answer"},{"name":"depth","in":"query","required":false,"schema":{"type":"integer","maximum":10,"minimum":0,"description":"Traversal depth for semantic trees","default":0,"title":"Depth"},"description":"Traversal depth for semantic trees"},{"name":"k","in":"query","required":false,"schema":{"type":"integer","maximum":50,"minimum":1,"description":"Number of context items","default":8,"title":"K"},"description":"Number of context items"},{"name":"model","in":"query","required":false,"schema":{"type":"string","description":"LLM model","default":"openai/gpt-4o","title":"Model"},"description":"LLM model"},{"name":"temperature","in":"query","required":false,"schema":{"type":"number","maximum":1.0,"minimum":0.0,"description":"Sampling temperature","default":0.1,"title":"Temperature"},"description":"Sampling temperature"},{"name":"quote_sources","in":"query","required":false,"schema":{"type":"boolean","description":"Whether to include [n] source markers in the answer","default":true,"title":"Quote Sources"},"description":"Whether to include [n] source markers in the answer"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Answer Question Writing Answer Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/writing/complete":{"get":{"tags":["Writing"],"summary":"Complete Text","description":"Generate intelligent text completions using your knowledge base and AI.\n\nThis endpoint provides AI-powered text completion that leverages your knowledge graph\nto suggest contextually relevant and semantically coherent text continuations.\n\n## Key Features\n\n| Feature | Description | Benefit |\n|---------|-------------|---------|\n| **AI-Powered Completion** | Uses OpenRouter LLMs for intelligent text generation | High-quality suggestions |\n| **Knowledge Integration** | Leverages graph database for contextual suggestions | Relevant content |\n| **Frame-Aware** | Incorporates semantic frame understanding | Meaningful completions |\n| **Configurable Context** | Customizable search parameters and style | Flexible control |\n\n## Request Examples\n\n**Minimal Request:**\n```json\n{\n  \"text\": \"Neural networks learn through\"\n}\n```\n\n**Full Request:**\n```json\n{\n  \"text\": \"The primary advantage of transformer architectures over RNNs is\",\n  \"use_knowledge_base\": true,\n  \"k\": 8,\n  \"document_ids\": [\"ml_research_2024\"],\n  \"frame_types\": [\"claim\", \"evidence\"]\n}\n```\n\n## Response Format\n\n**Example Response:**\n```json\n{\n  \"completions\": [\n    {\n      \"text\": \"their ability to process sequences in parallel, enabling significantly faster training and better capture of long-range dependencies through self-attention mechanisms.\",\n      \"confidence\": 0.89,\n      \"reasoning\": \"Based on transformer architecture research, the key advantages include parallel processing capabilities and self-attention for long-range dependencies.\"\n    }\n  ],\n  \"sources\": [\n    {\n      \"id\": \"transformer_advantages_a1b2c3\",\n      \"title\": \"Transformer Architecture Benefits\",\n      \"type\": \"Frame\"\n    }\n  ],\n  \"search_time_ms\": 125,\n  \"generation_time_ms\": 1840\n}\n```","operationId":"complete_text_writing_complete_get","parameters":[{"name":"text","in":"query","required":true,"schema":{"type":"string","description":"Input text to complete","title":"Text"},"description":"Input text to complete"},{"name":"context","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Additional context","title":"Context"},"description":"Additional context"},{"name":"style","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Writing style","default":"academic","title":"Style"},"description":"Writing style"},{"name":"k","in":"query","required":false,"schema":{"anyOf":[{"type":"integer","maximum":20,"minimum":1},{"type":"null"}],"description":"Number of context items","default":3,"title":"K"},"description":"Number of context items"},{"name":"document_ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated document IDs to filter","title":"Document Ids"},"description":"Comma-separated document IDs to filter"},{"name":"frame_types","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated frame types to filter","title":"Frame Types"},"description":"Comma-separated frame types to filter"},{"name":"use_knowledge_base","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"description":"Use knowledge graph for context","default":true,"title":"Use Knowledge Base"},"description":"Use knowledge graph for context"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/V2WritingResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/writing/rephrase":{"get":{"tags":["Writing"],"summary":"Rephrase Text","description":"Intelligently rephrase text with different styles and tones.\n\nThis endpoint provides intelligent text rephrasing that leverages your knowledge graph\nto suggest contextually appropriate alternatives in different styles and tones.\n\n## Key Features\n\n| Feature | Description | Benefit |\n|---------|-------------|---------|\n| **AI-Powered Rephrasing** | Uses OpenRouter LLMs for intelligent text transformation | High-quality alternatives |\n| **Knowledge Integration** | Leverages graph database for contextual alternatives | Relevant suggestions |\n| **Style Control** | Multiple writing styles (academic, casual, technical, formal, creative) | Flexible output |\n| **Context-Aware** | Maintains meaning while adapting tone and structure | Semantic preservation |\n\n## Writing Styles\n\n| Style | Description | Use Case |\n|-------|-------------|----------|\n| `academic` | Formal, scholarly tone | Research papers, academic writing |\n| `casual` | Informal, conversational tone | Blog posts, social media |\n| `technical` | Precise, technical language | Documentation, specifications |\n| `formal` | Professional, business tone | Reports, proposals |\n| `creative` | Engaging, imaginative tone | Marketing, storytelling |\n\n## Request Examples\n\n**Basic Request:**\n```json\n{\n  \"text\": \"The future of AI is very promising.\",\n  \"style\": \"technical\"\n}\n```\n\n**Advanced Request:**\n```json\n{\n  \"text\": \"Machine learning algorithms are becoming more sophisticated.\",\n  \"style\": \"academic\",\n  \"k\": 5,\n  \"document_ids\": [\"ml_research_2024\"],\n  \"frame_types\": [\"claim\", \"evidence\"]\n}\n```\n\n## Response Format\n\n**Example Response:**\n```json\n{\n  \"original_text\": \"The future of AI is very promising.\",\n  \"rephrasings\": [\n    {\n      \"text\": \"Artificial intelligence technologies demonstrate significant potential for advancement.\",\n      \"confidence\": 0.89,\n      \"style_match\": 0.92\n    },\n    {\n      \"text\": \"AI development trajectories indicate substantial opportunities ahead.\",\n      \"confidence\": 0.85,\n      \"style_match\": 0.88\n    }\n  ],\n  \"style\": \"technical\",\n  \"sources\": [\n    {\n      \"id\": \"ai_development_potential_a1b2c3\",\n      \"title\": \"AI Development Potential\",\n      \"type\": \"Frame\"\n    }\n  ],\n  \"search_time_ms\": 140,\n  \"generation_time_ms\": 2100\n}\n```\n\n## Transformation Process\n\n| Step | Description | Purpose |\n|------|-------------|---------|\n| **Context Analysis** | Understand original text meaning and context | Semantic understanding |\n| **Knowledge Integration** | Find related concepts in knowledge graph | Contextual enhancement |\n| **Style Application** | Apply requested style transformation | Tone adaptation |\n| **Multiple Options** | Generate several rephrasing alternatives | Choice variety |","operationId":"rephrase_text_writing_rephrase_get","parameters":[{"name":"text","in":"query","required":true,"schema":{"type":"string","description":"Input text to rephrase","title":"Text"},"description":"Input text to rephrase"},{"name":"context","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Additional context","title":"Context"},"description":"Additional context"},{"name":"style","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Writing style","default":"academic","title":"Style"},"description":"Writing style"},{"name":"k","in":"query","required":false,"schema":{"anyOf":[{"type":"integer","maximum":20,"minimum":1},{"type":"null"}],"description":"Number of context items","default":3,"title":"K"},"description":"Number of context items"},{"name":"document_ids","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated document IDs to filter","title":"Document Ids"},"description":"Comma-separated document IDs to filter"},{"name":"frame_types","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Comma-separated frame types to filter","title":"Frame Types"},"description":"Comma-separated frame types to filter"},{"name":"use_knowledge_base","in":"query","required":false,"schema":{"anyOf":[{"type":"boolean"},{"type":"null"}],"description":"Use knowledge graph for context","default":true,"title":"Use Knowledge Base"},"description":"Use knowledge graph for context"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/V2WritingResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/vault/documents":{"post":{"tags":["Vault"],"summary":"Add Document To Vault","description":"Add a document to vault storage only (no graph processing).\n\nThis endpoint stores documents directly to the file system vault without\ntriggering any semantic processing, frame extraction, or graph operations.\nUseful for:\n- Bulk document storage\n- Raw document backup\n- Testing document storage without processing\n\n**Example Request:**\n```json\n{\n  \"text\": \"This is my document content\",\n  \"title\": \"My Document\",\n  \"metadata\": {\"author\": \"John Doe\"}\n}\n```","operationId":"add_document_to_vault_vault_documents_post","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VaultDocumentRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VaultDocumentResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["Vault"],"summary":"List Vault Documents","description":"List all documents in vault storage with pagination.\n\nReturns a paginated list of document IDs and basic metadata\nwithout loading full document content.","operationId":"list_vault_documents_vault_documents_get","parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":1000,"minimum":1,"description":"Maximum number of documents to return","default":50,"title":"Limit"},"description":"Maximum number of documents to return","example":20},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","minimum":0,"description":"Number of documents to skip","default":0,"title":"Offset"},"description":"Number of documents to skip","example":0}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response List Vault Documents Vault Documents Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/vault/documents/{doc_id}":{"get":{"tags":["Vault"],"summary":"Get Document From Vault","description":"Get a document from vault storage.\n\nRetrieves the raw document from file storage without any graph processing.\nReturns the document content, metadata, and vault-specific information.","operationId":"get_document_from_vault_vault_documents__doc_id__get","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","description":"Document ID to retrieve","title":"Doc Id"},"description":"Document ID to retrieve","example":"doc_ai_research_2024"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Get Document From Vault Vault Documents  Doc Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Vault"],"summary":"Delete Document From Vault","description":"Delete a document from vault storage.\n\nRemoves the document from file storage only. This does NOT remove\nany related nodes from the graph database. Use the main document\nendpoints for full deletion including graph cleanup.","operationId":"delete_document_from_vault_vault_documents__doc_id__delete","parameters":[{"name":"doc_id","in":"path","required":true,"schema":{"type":"string","description":"Document ID to delete","title":"Doc Id"},"description":"Document ID to delete","example":"doc_ai_research_2024"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VaultDocumentResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/vault/stats":{"get":{"tags":["Vault"],"summary":"Get Vault Statistics","description":"Get comprehensive vault storage statistics.\n\nReturns information about:\n- Total number of documents\n- Storage usage\n- Document IDs\n- Last update times","operationId":"get_vault_statistics_vault_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VaultStatsResponse"}}}}}}},"/extract/frames":{"post":{"tags":["Extract","Extract"],"summary":"Extract Frames","operationId":"extract_frames_extract_frames_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FrameExtractionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/frames/sync":{"post":{"tags":["Extract","Extract"],"summary":"Extract Frames Sync","description":"Synchronous frame extraction for workers and direct use.\nReturns the extracted frames immediately.\nFor sections: returns SectionFrameExtractionResult with frames list\nFor documents: returns FrameExtractionResult with root_frame","operationId":"extract_frames_sync_extract_frames_sync_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FrameExtractionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/FrameExtractionResult"},{"$ref":"#/components/schemas/SectionFrameExtractionResult"}],"title":"Response Extract Frames Sync Extract Frames Sync Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/frames/status/{job_id}":{"get":{"tags":["Extract","Extract"],"summary":"Get Frame Extraction Status","operationId":"get_frame_extraction_status_extract_frames_status__job_id__get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/metadata":{"post":{"tags":["Extract","Extract"],"summary":"Extract Metadata","description":"Start async metadata extraction for the given text. Returns a job_id immediately.","operationId":"extract_metadata_extract_metadata_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractMetadataRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractMetadataResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/metadata/sync":{"post":{"tags":["Extract","Extract"],"summary":"Extract Metadata Sync","description":"Synchronous metadata extraction for workers and direct use.\nReturns the extracted metadata immediately.","operationId":"extract_metadata_sync_extract_metadata_sync_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractMetadataRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentMetadata"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/metadata/status/{job_id}":{"get":{"tags":["Extract","Extract"],"summary":"Get Metadata Status","description":"Query the status/result of a metadata extraction job.","operationId":"get_metadata_status_extract_metadata_status__job_id__get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MetadataStatusResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/embeddings":{"post":{"tags":["Extract","Extract"],"summary":"Generate Embedding","description":"Generate embedding for any text content.","operationId":"generate_embedding_extract_embeddings_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbeddingRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmbeddingResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/extract/status":{"get":{"tags":["Extract","Extract"],"summary":"Get Embedding Service Status","description":"Get the status of the embedding service.","operationId":"get_embedding_service_status_extract_status_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/extract/sections":{"post":{"tags":["Extract","Extract"],"summary":"Extract Sections","description":"Parse a document into semantic sections using the SemanticParser. Does not persist anything.","operationId":"extract_sections_extract_sections_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractSectionsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExtractSectionsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/oauth/login":{"get":{"tags":["OAuth Authentication","OAuth Authentication"],"summary":"Oauth Login","description":"Initiate OAuth login with Auth0.\n\nArgs:\n    request: FastAPI request object\n    redirect_uri: Optional custom redirect URI\n\nReturns:\n    Redirect to Auth0 authorization URL","operationId":"oauth_login_oauth_login_get","parameters":[{"name":"redirect_uri","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Custom redirect URI","title":"Redirect Uri"},"description":"Custom redirect URI"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/oauth/callback":{"get":{"tags":["OAuth Authentication","OAuth Authentication"],"summary":"Oauth Callback","description":"Handle OAuth callback from Auth0.\n\nArgs:\n    request: FastAPI request object\n    code: Authorization code from Auth0\n    state: State parameter for CSRF protection\n    error: OAuth error parameter\n    error_description: OAuth error description\n\nReturns:\n    Redirect to frontend with token or error","operationId":"oauth_callback_oauth_callback_get","parameters":[{"name":"code","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Authorization code from Auth0","title":"Code"},"description":"Authorization code from Auth0"},{"name":"state","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"State parameter for CSRF protection","title":"State"},"description":"State parameter for CSRF protection"},{"name":"error","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"OAuth error parameter","title":"Error"},"description":"OAuth error parameter"},{"name":"error_description","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"OAuth error description","title":"Error Description"},"description":"OAuth error description"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/oauth/refresh":{"post":{"tags":["OAuth Authentication","OAuth Authentication"],"summary":"Refresh Token","description":"Refresh access token using refresh token.\n\nArgs:\n    refresh_token: Auth0 refresh token\n\nReturns:\n    New token set from Auth0","operationId":"refresh_token_oauth_refresh_post","parameters":[{"name":"refresh_token","in":"query","required":true,"schema":{"type":"string","title":"Refresh Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Refresh Token Oauth Refresh Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/oauth/logout":{"post":{"tags":["OAuth Authentication","OAuth Authentication"],"summary":"Logout","description":"Logout user from Auth0.\n\nArgs:\n    request: FastAPI request object\n    return_to: Optional URL to return to after logout\n\nReturns:\n    Redirect to Auth0 logout URL","operationId":"logout_user_post","parameters":[{"name":"return_to","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"URL to return to after logout","title":"Return To"},"description":"URL to return to after logout"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"tags":["OAuth Authentication","OAuth Authentication"],"summary":"Logout","description":"Logout user from Auth0.\n\nArgs:\n    request: FastAPI request object\n    return_to: Optional URL to return to after logout\n\nReturns:\n    Redirect to Auth0 logout URL","operationId":"logout_user_get","parameters":[{"name":"return_to","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"URL to return to after logout","title":"Return To"},"description":"URL to return to after logout"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/oauth/me":{"get":{"tags":["OAuth Authentication","OAuth Authentication"],"summary":"Get Current User Oauth","description":"Get current user information from Auth0 token.\n\nArgs:\n    request: FastAPI request object\n    token: Bearer token from request header\n\nReturns:\n    User information","operationId":"get_current_user_oauth_oauth_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}},"security":[{"HTTPBearer":[]}]}},"/jobs/{job_id}":{"get":{"tags":["System","Jobs"],"summary":"Get Job Status","description":"Retrieve the status of any async job by its ID.\n\nTrack the progress of document processing jobs started via `POST /documents`.\nJobs run in the background using Celery workers and persist across service restarts.\n\n**Job Statuses:**\n- `PENDING`: Job queued but not started\n- `PROCESSING`: Job actively running\n- `COMPLETED`: Job finished successfully\n- `FAILED`: Job encountered an error\n- `RETRY`: Job failed but will retry\n- `REVOKED`: Job was cancelled\n\n**Job Types:**\n- **Document Ingestion**: Full pipeline processing (parsing, frames, embeddings)\n- **Section Processing**: Individual section analysis\n- **Frame Extraction**: Semantic frame identification\n- **Embedding Generation**: Vector embedding creation\n\n**Response Format:**\n```json\n{\n  \"job_id\": \"ingest_ai_research_20240715_103000\",\n  \"status\": \"PROCESSING\",\n  \"message\": \"Processing section 3 of 10: Methodology\",\n  \"progress\": {\n    \"current\": 3,\n    \"total\": 10,\n    \"percentage\": 30\n  },\n  \"result\": null,\n  \"created_at\": \"2024-01-15T10:30:00Z\",\n  \"updated_at\": \"2024-01-15T10:32:15Z\"\n}\n```\n\n**Completed Job Result:**\n```json\n{\n  \"job_id\": \"ingest_ai_research_20240715_103000\",\n  \"status\": \"COMPLETED\",\n  \"message\": \"AI research paper processed successfully\",\n  \"result\": {\n    \"document_id\": \"ai_research_paper_2024\",\n    \"sections_created\": 8,\n    \"frames_extracted\": 47,\n    \"embeddings_generated\": 55,\n    \"processing_time\": 127.5\n  }\n}\n```\n\n**Example Usage:**\n```bash\n# Check job status periodically\ncurl http://localhost:8000/jobs/ingest_ai_research_20240715_103000\n\n# Poll until completion\nwhile true; do\n  curl http://localhost:8000/jobs/ingest_ai_research_20240715_103000\n  sleep 2\ndone\n```\n\n**Features:**\n- **Real-time Progress**: Live updates during processing\n- **Persistent**: Jobs survive service restarts\n- **Detailed Results**: Comprehensive completion data\n- **Error Handling**: Clear error messages and retry logic","operationId":"get_job_status_jobs__job_id__get","parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobStatusResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/jobs":{"get":{"tags":["System","Jobs"],"summary":"List Jobs","description":"List all running jobs and their associated document IDs (if available).","operationId":"list_jobs_jobs_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/health":{"get":{"tags":["System","System"],"summary":"Health Check","description":"Check API health and service availability.","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/stats":{"get":{"tags":["System","System"],"summary":"Get Stats","description":"Get comprehensive system statistics.","operationId":"get_stats_stats_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"AdminUserCreate":{"properties":{"username":{"type":"string","maxLength":50,"minLength":3,"title":"Username"},"email":{"type":"string","maxLength":254,"minLength":3,"title":"Email"},"display_name":{"anyOf":[{"type":"string","maxLength":100},{"type":"null"}],"title":"Display Name"},"role":{"$ref":"#/components/schemas/UserRole","default":"user"},"is_active":{"type":"boolean","title":"Is Active","default":true},"email_confirmed":{"type":"boolean","title":"Email Confirmed","default":false}},"type":"object","required":["username","email"],"title":"AdminUserCreate","description":"Request model for admin user creation (Auth0-managed; no password field)."},"ApiKeyCreate":{"properties":{"name":{"type":"string","maxLength":100,"minLength":1,"title":"Name"},"expires_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Expires At"},"scopes":{"items":{"$ref":"#/components/schemas/ApiKeyScope"},"type":"array","title":"Scopes"},"custom_api_rate_limit":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Custom Api Rate Limit"},"data_scope":{"$ref":"#/components/schemas/DataScopeType","description":"Data scope: 'user' for shared user data, 'api_key' for isolated key data","default":"user"}},"type":"object","required":["name"],"title":"ApiKeyCreate","description":"Model for API key creation."},"ApiKeyResponse":{"properties":{"id":{"type":"string","title":"Id"},"name":{"type":"string","title":"Name"},"is_active":{"type":"boolean","title":"Is Active"},"expires_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Expires At"},"last_used":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Last Used"},"scopes":{"items":{"$ref":"#/components/schemas/ApiKeyScope"},"type":"array","title":"Scopes"},"total_requests":{"type":"integer","title":"Total Requests"},"data_scope":{"$ref":"#/components/schemas/DataScopeType"},"created_at":{"type":"string","format":"date-time","title":"Created At"}},"type":"object","required":["id","name","is_active","expires_at","last_used","scopes","total_requests","data_scope","created_at"],"title":"ApiKeyResponse","description":"Model for API key data in responses."},"ApiKeyScope":{"type":"string","enum":["read","write","admin","graph","bulk","export"],"title":"ApiKeyScope","description":"API key permission scopes."},"Body_create_document_multipart":{"properties":{"file":{"anyOf":[{"type":"string","format":"binary"},{"type":"null"}],"title":"File"},"text":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Text"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"document_type_hint":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Document Type Hint"},"metadata":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Metadata"}},"type":"object","title":"Body_create_document_multipart"},"CandidatesRequest":{"properties":{"query":{"type":"string","title":"Query","description":"Search query text"},"limit":{"type":"integer","maximum":100.0,"minimum":1.0,"title":"Limit","description":"Number of results to return","default":10},"min_score":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Min Score","description":"Minimum similarity score threshold","default":0.0},"search_strategy":{"$ref":"#/components/schemas/SearchStrategy","description":"Search strategy to use","default":"multi_index"},"reranking_strategy":{"$ref":"#/components/schemas/RerankingStrategy","description":"Reranking strategy for results","default":"balanced"},"traverse":{"type":"boolean","title":"Traverse","description":"Enable graph traversal mode for hierarchical results. If false, depth is set to 1","default":true},"depth":{"type":"integer","maximum":20.0,"minimum":0.0,"title":"Depth","description":"Maximum depth of traversal for hierarchical results (0-20)","default":2},"filters":{"$ref":"#/components/schemas/UnifiedFilters","description":"Filtering options for what to return"}},"type":"object","required":["query"],"title":"CandidatesRequest","description":"Request model for candidates search endpoint."},"ConfidenceLevel":{"type":"string","enum":["certain","likely","possible","uncertain","speculative"],"title":"ConfidenceLevel","description":"Valid confidence levels for claims and implications."},"DataScopeType":{"type":"string","enum":["user","api_key"],"title":"DataScopeType","description":"Data scope types for API keys and user data."},"Direction":{"type":"string","enum":["children","parents","both"],"title":"Direction","description":"Tree traversal directions"},"DocumentMetadata":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags"},"date":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date"},"aliases":{"items":{"type":"string"},"type":"array","title":"Aliases"},"author":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Author"},"source":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source"},"hyponyms":{"items":{"type":"string"},"type":"array","title":"Hyponyms"},"hypernyms":{"items":{"type":"string"},"type":"array","title":"Hypernyms"},"summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Summary"},"source_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Type"},"source_path":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Source Path"}},"type":"object","title":"DocumentMetadata","description":"Document-level metadata (legacy)."},"DocumentRequest":{"properties":{"text":{"type":"string","title":"Text","description":"Document content to process","examples":["# Introduction to Machine Learning\n\nMachine learning is a subset of artificial intelligence...","The quarterly financial report shows significant growth in our AI division. Key metrics include...","Personal note: Today I learned about the importance of semantic frames in knowledge representation..."]},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title","description":"Document title (auto-generated if not provided)","examples":["Introduction to Machine Learning","Q4 Financial Report","Personal Learning Notes"]},"document_type_hint":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Document Type Hint","description":"Document type hints will help the system to choose more appropriate processing pipelines","examples":["research_paper","article","personal_note","reference_document","financial_report"]},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata","description":"Additional document metadata","examples":[{"author":"Dr. Jane Smith","department":"AI Research","tags":["machine learning","research"]},{"date":"2024-01-15","department":"finance","source":"company_docs"},{"created_by":"user123","tags":["learning","notes"],"type":"personal"}]},"scope_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Scope Type","description":"Internal field: Data scope type (user/api_key)"},"scope_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Scope Id","description":"Internal field: Scope identifier (user_id or api_key_id)"}},"type":"object","required":["text"],"title":"DocumentRequest","description":"Request model for document operations","examples":[{"document_type_hint":"article","metadata":{"author":"Dr. Jane Smith","source":"tech_blog","tags":["AI","interfaces","technology"]},"text":"# The Future of AI Interfaces\n\nArtificial intelligence interfaces are evolving rapidly, with new paradigms emerging that prioritize natural language interaction over traditional GUI elements...","title":"The Future of AI Interfaces"},{"document_type_hint":"personal_note","metadata":{"attendees":["John Doe","Jane Smith","Bob Johnson"],"department":"AI Research","meeting_date":"2024-01-15"},"text":"## Meeting Notes - AI Strategy Session\n\n### Key Decisions\n- Implement graph-based knowledge representation\n- Focus on semantic frame extraction\n- Prioritize user experience in new interfaces\n\n### Action Items\n- Research vector databases\n- Prototype frame extraction pipeline\n- Design user testing framework","title":"AI Strategy Meeting Notes"},{"document_type_hint":"research_paper","metadata":{"authors":["Dr. Alice Chen","Prof. Bob Wilson"],"institution":"University of Technology","keywords":["semantic frames","NLP","knowledge extraction"],"publication_year":2024},"text":"ABSTRACT\n\nThis paper presents a novel approach to semantic frame extraction using large language models. We demonstrate that structured prompting combined with vector search significantly improves frame identification accuracy...\n\n1. INTRODUCTION\n\nSemantic frames provide a structured representation of meaning that captures the relationships between concepts...","title":"Semantic Frame Extraction Using LLMs"}]},"DocumentResponse":{"properties":{"id":{"type":"string","title":"Id"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"text_length":{"type":"integer","title":"Text Length"},"metadata":{"additionalProperties":true,"type":"object","title":"Metadata","default":{}},"analysis":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Analysis"}},"type":"object","required":["id","created_at","updated_at","text_length"],"title":"DocumentResponse","description":"Response model for document operations"},"EdgeCreateRequest":{"properties":{"from_node_id":{"type":"string","title":"From Node Id","description":"Source node ID"},"to_node_id":{"type":"string","title":"To Node Id","description":"Target node ID"},"relationship_type":{"type":"string","title":"Relationship Type","description":"Type of relationship"},"properties":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Properties","description":"Optional edge properties"}},"type":"object","required":["from_node_id","to_node_id","relationship_type"],"title":"EdgeCreateRequest","description":"Request to create a single edge between two nodes."},"EmbeddingRequest":{"properties":{"text":{"type":"string","title":"Text","description":"Text content to embed"},"summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Summary","description":"Optional summary text to embed (will generate separate embedding)"}},"type":"object","required":["text"],"title":"EmbeddingRequest","description":"Request to generate embedding for any text."},"EmbeddingResponse":{"properties":{"embedding":{"items":{"type":"number"},"type":"array","title":"Embedding","description":"Text embedding vector"},"summary_embedding":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"title":"Summary Embedding","description":"Summary embedding vector (if summary provided)"},"processing_time":{"type":"number","title":"Processing Time","description":"Time taken to generate embeddings"},"vector_dimension":{"type":"integer","title":"Vector Dimension","description":"Dimension of embedding vectors"},"success":{"type":"boolean","title":"Success","description":"Whether the operation succeeded","default":true},"message":{"type":"string","title":"Message","description":"Status message","default":""}},"type":"object","required":["embedding","processing_time","vector_dimension"],"title":"EmbeddingResponse","description":"Response containing generated embeddings."},"EvidenceType":{"type":"string","enum":["empirical","statistical","testimonial","logical","documentary","experimental","observational","technical"],"title":"EvidenceType","description":"Valid types of evidence."},"ExtractMetadataRequest":{"properties":{"text":{"type":"string","title":"Text","description":"Text to extract metadata from"},"filename":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Filename","description":"Optional filename"},"frontmatter":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Frontmatter","description":"Optional frontmatter block"},"extract_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Extract Type","description":"Type of extraction (document or section)","default":"document"}},"type":"object","required":["text"],"title":"ExtractMetadataRequest"},"ExtractMetadataResponse":{"properties":{"job_id":{"type":"string","title":"Job Id","description":"Job ID for async metadata extraction"}},"type":"object","required":["job_id"],"title":"ExtractMetadataResponse"},"ExtractSectionsRequest":{"properties":{"text":{"type":"string","title":"Text","description":"Document text to parse into semantic sections"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title","description":"Document title"},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata","description":"Optional metadata"}},"type":"object","required":["text"],"title":"ExtractSectionsRequest"},"ExtractSectionsResponse":{"properties":{"sections":{"items":{"$ref":"#/components/schemas/SemanticSection"},"type":"array","title":"Sections","description":"Parsed semantic sections"}},"type":"object","required":["sections"],"title":"ExtractSectionsResponse"},"FieldSet":{"type":"string","enum":["basic","content","metadata","all"],"title":"FieldSet","description":"Standard field sets for consistent data retrieval"},"Frame":{"properties":{"schema_id":{"type":"string","title":"Schema Id","description":"The FrameSchema this instance conforms to"},"source_text_span":{"anyOf":[{"items":{"type":"integer"},"type":"array"},{"type":"null"}],"title":"Source Text Span","description":"Character span in source text"},"confidence_score":{"anyOf":[{"type":"number","maximum":1.0,"minimum":0.0},{"type":"null"}],"title":"Confidence Score","description":"Overall confidence"},"confidence_details":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Confidence Details","description":"Breakdown of confidence components"},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata","description":"Additional metadata"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","description":"Tags or keywords extracted for this frame"},"summary":{"type":"string","title":"Summary"},"hypernyms":{"items":{"type":"string"},"type":"array","title":"Hypernyms","description":"Hypernyms (more general terms) for this frame"},"hyponyms":{"items":{"type":"string"},"type":"array","title":"Hyponyms","description":"Hyponyms (more specific terms) for this frame"},"slot_values":{"additionalProperties":true,"type":"object","title":"Slot Values","description":"Values for schema slots"},"children":{"items":{"$ref":"#/components/schemas/Frame"},"type":"array","title":"Children","description":"Nested child frames"}},"type":"object","required":["schema_id"],"title":"Frame","description":"A Frame instance that conforms to a registered FrameSchema.\n\nThis is the primary data structure for holding extracted knowledge.\nEach Frame instance:\n- Has a schema_id linking it to its frame type definition\n- Contains slot_values filled with actual extracted data\n- Can have child frames for nested structures\n- Tracks confidence and source information"},"FrameExtractionRequest":{"properties":{"text":{"type":"string","title":"Text"},"filename":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Filename"},"section_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Section Id"},"document_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Document Type","default":"general"},"retry_count":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Retry Count","default":0},"retry_feedback":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Retry Feedback"}},"type":"object","required":["text"],"title":"FrameExtractionRequest"},"FrameExtractionResult":{"properties":{"detected_language":{"type":"string","title":"Detected Language","description":"ISO 639-1 language code (de, en, fr, es, etc.)"},"root_frame":{"$ref":"#/components/schemas/app__frames__extraction_dynamic__ExtractedFrame","description":"Root frame of the hierarchical structure"},"extraction_reasoning":{"type":"string","title":"Extraction Reasoning","description":"Explanation of extraction decisions"}},"additionalProperties":false,"type":"object","required":["detected_language","root_frame","extraction_reasoning"],"title":"FrameExtractionResult","description":"Result of frame extraction from text."},"GraphNodeType":{"type":"string","enum":["Document","Section","Frame","Tag","Hypernym","Hyponym"],"title":"GraphNodeType","description":"Types of nodes in the graph."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"InternalBatchRequest":{"properties":{"nodes":{"anyOf":[{"items":{"additionalProperties":true,"type":"object"},"type":"array"},{"type":"null"}],"title":"Nodes","description":"Nodes to create"},"edges":{"anyOf":[{"items":{"additionalProperties":true,"type":"object"},"type":"array"},{"type":"null"}],"title":"Edges","description":"Edges to create"},"atomic":{"type":"boolean","title":"Atomic","description":"Execute all operations atomically","default":true},"bypass_scoping":{"type":"boolean","title":"Bypass Scoping","description":"Admin-only: bypass user scoping","default":false}},"type":"object","title":"InternalBatchRequest","description":"Internal batch request for system operations."},"InternalQueryRequest":{"properties":{"query":{"type":"string","title":"Query","description":"Cypher query to execute"},"parameters":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Parameters","description":"Query parameters"},"limit":{"anyOf":[{"type":"integer","maximum":10000.0,"minimum":1.0},{"type":"null"}],"title":"Limit","description":"Result limit"},"timeout":{"anyOf":[{"type":"integer","maximum":300.0,"minimum":1.0},{"type":"null"}],"title":"Timeout","description":"Query timeout in seconds","default":30},"bypass_scoping":{"type":"boolean","title":"Bypass Scoping","description":"Admin-only: bypass user scoping","default":false}},"type":"object","required":["query"],"title":"InternalQueryRequest","description":"Internal query request with additional safety parameters."},"JobStatusResponse":{"properties":{"job_id":{"type":"string","title":"Job Id"},"status":{"type":"string","title":"Status"},"message":{"type":"string","title":"Message"},"result":{"anyOf":[{},{"type":"null"}],"title":"Result"}},"type":"object","required":["job_id","status","message"],"title":"JobStatusResponse"},"MatchedNode":{"properties":{"id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Id","description":"Node ID"},"title":{"type":"string","title":"Title","description":"Node title"},"type":{"type":"string","title":"Type","description":"Node type/label"},"summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Summary","description":"Short summary of the node"},"citation_index":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Citation Index","description":"Numbered citation index used in the answer"},"document_title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Document Title","description":"Title of the root document for this source"},"document_summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Document Summary","description":"Summary of the root document for this source"}},"type":"object","required":["title","type"],"title":"MatchedNode","description":"Information about a node that matched title filtering."},"MetadataStatusResponse":{"properties":{"job_id":{"type":"string","title":"Job Id"},"status":{"type":"string","title":"Status"},"result":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Result"},"error":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Error"}},"type":"object","required":["job_id","status"],"title":"MetadataStatusResponse"},"NestedFrameReference":{"properties":{"frame_type":{"type":"string","title":"Frame Type","description":"Type of the nested frame"},"text":{"type":"string","title":"Text","description":"Text content of the nested frame"}},"additionalProperties":false,"type":"object","required":["frame_type","text"],"title":"NestedFrameReference","description":"Reference to a nested frame within the extraction."},"NodeCreateRequest":{"properties":{"node_type":{"$ref":"#/components/schemas/GraphNodeType","description":"Type of node to create"},"labels":{"items":{"type":"string"},"type":"array","title":"Labels","description":"Labels to apply to the node"},"properties":{"additionalProperties":true,"type":"object","title":"Properties","description":"All properties from Pydantic model as key-value pairs"},"node_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Node Id","description":"Optional node ID (auto-generated if not provided)"}},"type":"object","required":["node_type","labels","properties"],"title":"NodeCreateRequest","description":"Request to create a single node with any Pydantic model."},"NodeRequest":{"properties":{"filters":{"$ref":"#/components/schemas/UnifiedFilters","description":"Filtering options for what to return"}},"type":"object","title":"NodeRequest","description":"Request model for POST /node/{id} endpoint."},"PasswordUpdate":{"properties":{"new_password":{"type":"string","maxLength":128,"minLength":8,"title":"New Password"},"force_password_change":{"type":"boolean","title":"Force Password Change","default":false}},"type":"object","required":["new_password"],"title":"PasswordUpdate","description":"Deprecated: Passwords are managed by Auth0. Kept for compatibility."},"QuestionType":{"type":"string","enum":["factual","analytical","evaluative","open-ended","rhetorical","clarification"],"title":"QuestionType","description":"Valid types of questions."},"ReliabilityLevel":{"type":"string","enum":["high","medium","low","very_high","very_low","unknown"],"title":"ReliabilityLevel","description":"Valid reliability levels."},"RerankingStrategy":{"type":"string","enum":["balanced","comprehensive","focused","diversity","relevance"],"title":"RerankingStrategy","description":"Reranking strategies for result optimization"},"SearchStrategy":{"type":"string","enum":["multi_index","vector","hybrid","graph_aware","semantic"],"title":"SearchStrategy","description":"Search strategies for different retrieval approaches"},"SectionFrameExtractionResult":{"properties":{"detected_language":{"type":"string","title":"Detected Language","description":"ISO 639-1 language code (de, en, fr, es, etc.)"},"frames":{"items":{"$ref":"#/components/schemas/app__frames__extraction__ExtractedFrame"},"type":"array","title":"Frames","description":"List of content frames extracted from section"},"extraction_reasoning":{"type":"string","title":"Extraction Reasoning","description":"Explanation of extraction decisions"}},"additionalProperties":false,"type":"object","required":["detected_language","frames","extraction_reasoning"],"title":"SectionFrameExtractionResult","description":"Result of frame extraction from a section - returns list of content frames."},"SemanticSection":{"properties":{"id":{"type":"string","title":"Id","description":"Unique section ID (content hash)"},"title":{"type":"string","title":"Title","description":"Section title (from heading or generated)"},"level":{"type":"integer","title":"Level","description":"Heading level (0=root, 1=h1, 2=h2, etc.)","default":0},"section_type":{"type":"string","title":"Section Type","description":"Type of section: heading_section, paragraph, list, code_block, quote, etc."},"raw_content":{"type":"string","title":"Raw Content","description":"Original markdown content of this section"},"content":{"items":{"$ref":"#/components/schemas/Frame"},"type":"array","title":"Content","description":"Array of classified frames representing the meaning"},"summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Summary","description":"Generated summary of this section's content"},"start_pos":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Start Pos","description":"Character position where section starts"},"end_pos":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"End Pos","description":"Character position where section ends"},"metadata":{"additionalProperties":true,"type":"object","title":"Metadata","description":"Additional metadata"}},"type":"object","required":["title","section_type","raw_content"],"title":"SemanticSection","description":"A semantic section represents a meaningful unit of content with structure metadata\nand an array of classified frames representing the content meaning."},"SourceType":{"type":"string","enum":["academic","news","blog","book","government","technical","social_media","source"],"title":"SourceType","description":"Valid types of sources."},"StrengthLevel":{"type":"string","enum":["strong","moderate","weak","very_strong","very_weak"],"title":"StrengthLevel","description":"Valid strength levels for evidence and arguments."},"SuccessResponse":{"properties":{"success":{"type":"boolean","title":"Success","default":true},"message":{"type":"string","title":"Message"}},"type":"object","required":["message"],"title":"SuccessResponse","description":"Generic success response."},"TreeRequest":{"properties":{"direction":{"$ref":"#/components/schemas/Direction","description":"Direction of traversal: children, parents, both","default":"children"},"depth":{"type":"integer","maximum":20.0,"minimum":0.0,"title":"Depth","description":"Maximum depth of traversal","default":2},"limit":{"type":"integer","maximum":1000.0,"minimum":1.0,"title":"Limit","description":"Maximum number of nodes to return","default":100},"filters":{"$ref":"#/components/schemas/UnifiedFilters","description":"Filtering options for what to return"}},"type":"object","title":"TreeRequest","description":"Request model for POST /tree/{id} endpoint."},"UnifiedFilters":{"properties":{"field_set":{"anyOf":[{"$ref":"#/components/schemas/FieldSet"},{"type":"null"}],"description":"Predefined field set to return","default":"basic"},"include_fields":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Include Fields","description":"Additional fields to include beyond the field set"},"exclude_fields":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Exclude Fields","description":"Fields to exclude from the field set"},"frame_types":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Frame Types","description":"Filter by frame types (claim, evidence, method, etc.)"},"node_types":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Node Types","description":"Filter by node types (Document, Section, Frame)"},"document_types":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Document Types","description":"Filter by document types (research_paper, article, etc.)"},"relationship_types":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Relationship Types","description":"Filter by relationship types (CONTAINS, SUPPORTS, etc.)"},"node_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Node Ids","description":"Filter by specific node IDs"},"document_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Document Ids","description":"Filter by specific document IDs"},"frame_ids":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Frame Ids","description":"Filter by specific frame IDs"},"tags":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Tags","description":"Filter by tags"},"authors":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Authors","description":"Filter by authors"},"sources":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Sources","description":"Filter by sources"},"min_confidence":{"anyOf":[{"type":"number","maximum":1.0,"minimum":0.0},{"type":"null"}],"title":"Min Confidence","description":"Minimum confidence score"},"confidence_levels":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Confidence Levels","description":"Filter by confidence levels (certain, likely, possible)"},"date_from":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date From","description":"Filter content created after this date (ISO format)"},"date_to":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Date To","description":"Filter content created before this date (ISO format)"},"title_patterns":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Title Patterns","description":"Filter by title patterns (supports wildcards)"},"text_contains":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Text Contains","description":"Filter by text content patterns"},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata","description":"Custom metadata key-value filters"},"traverse":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Traverse","description":"Enable traversal mode for metadata search"}},"type":"object","title":"UnifiedFilters","description":"Unified filtering specification that controls WHAT is returned from results.\n\nThis is a flat structure that focuses on filtering and field selection,\nnot search behavior (which is handled at the top level)."},"User":{"properties":{"id":{"type":"string","title":"Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"email":{"type":"string","format":"email","title":"Email"},"role":{"type":"string","title":"Role","default":"user"},"is_active":{"type":"boolean","title":"Is Active","default":true},"primary_identity_id":{"type":"string","title":"Primary Identity Id","description":"Primary identity for this user"},"username":{"anyOf":[{"type":"string","maxLength":50,"minLength":3,"pattern":"^[a-zA-Z0-9_-]+$"},{"type":"null"}],"title":"Username"},"profile_picture_url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Profile Picture Url"},"display_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Display Name"},"custom_api_rate_limit":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Custom Api Rate Limit"},"custom_auth_rate_limit":{"anyOf":[{"type":"integer","minimum":1.0},{"type":"null"}],"title":"Custom Auth Rate Limit"},"custom_max_documents":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Custom Max Documents"},"custom_max_storage_mb":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Custom Max Storage Mb"},"custom_max_daily_query_requests":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Custom Max Daily Query Requests"},"custom_max_daily_add_requests":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Custom Max Daily Add Requests"},"current_document_count":{"type":"integer","minimum":0.0,"title":"Current Document Count","default":0},"current_storage_mb":{"type":"number","minimum":0.0,"title":"Current Storage Mb","default":0.0},"daily_query_request_count":{"type":"integer","minimum":0.0,"title":"Daily Query Request Count","default":0},"daily_add_request_count":{"type":"integer","minimum":0.0,"title":"Daily Add Request Count","default":0},"daily_reset_date":{"type":"string","format":"date","title":"Daily Reset Date"},"last_api_request":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Last Api Request"},"api_request_count_window":{"type":"integer","minimum":0.0,"title":"Api Request Count Window","default":0},"last_auth_request":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Last Auth Request"},"auth_request_count_window":{"type":"integer","minimum":0.0,"title":"Auth Request Count Window","default":0}},"type":"object","required":["email","primary_identity_id"],"title":"User","description":"User model with authentication and authorization information."},"UserLimitsUpdate":{"properties":{"max_documents":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Max Documents"},"max_storage_mb":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Max Storage Mb"},"api_rate_limit_per_minute":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Api Rate Limit Per Minute"},"daily_query_limit":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Daily Query Limit"},"daily_add_limit":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Daily Add Limit"}},"type":"object","title":"UserLimitsUpdate","description":"Request model for updating user limits."},"UserLookupResponse":{"properties":{"id":{"type":"string","title":"Id"},"username":{"type":"string","title":"Username"},"email":{"type":"string","title":"Email"},"display_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Display Name"},"is_guest":{"type":"boolean","title":"Is Guest"},"is_active":{"type":"boolean","title":"Is Active"},"is_suspended":{"type":"boolean","title":"Is Suspended","default":false},"email_confirmed":{"type":"boolean","title":"Email Confirmed"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"last_login":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Last Login"},"roles":{"items":{"type":"string"},"type":"array","title":"Roles","default":[]},"current_document_count":{"type":"integer","title":"Current Document Count","default":0},"current_storage_mb":{"type":"number","title":"Current Storage Mb","default":0.0},"daily_query_request_count":{"type":"integer","title":"Daily Query Request Count","default":0},"daily_add_request_count":{"type":"integer","title":"Daily Add Request Count","default":0},"custom_limits":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Custom Limits"}},"type":"object","required":["id","username","email","is_guest","is_active","email_confirmed","created_at"],"title":"UserLookupResponse","description":"Response model for user lookup."},"UserResponse":{"properties":{"id":{"type":"string","title":"Id"},"email":{"type":"string","title":"Email"},"role":{"type":"string","title":"Role"},"display_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Display Name"},"username":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Username"},"is_active":{"type":"boolean","title":"Is Active"},"primary_identity_id":{"type":"string","title":"Primary Identity Id"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"current_document_count":{"type":"integer","title":"Current Document Count"},"current_storage_mb":{"type":"number","title":"Current Storage Mb"},"daily_query_request_count":{"type":"integer","title":"Daily Query Request Count"},"daily_add_request_count":{"type":"integer","title":"Daily Add Request Count"}},"type":"object","required":["id","email","role","display_name","username","is_active","primary_identity_id","created_at","current_document_count","current_storage_mb","daily_query_request_count","daily_add_request_count"],"title":"UserResponse","description":"Model for user data in API responses."},"UserRole":{"type":"string","enum":["guest","user","premium","admin","root"],"title":"UserRole","description":"User role types with hierarchical permissions."},"UserRoleUpdate":{"properties":{"role":{"$ref":"#/components/schemas/UserRole"},"action":{"type":"string","pattern":"^(add|remove|set)$","title":"Action"}},"type":"object","required":["role","action"],"title":"UserRoleUpdate","description":"Request model for updating user roles."},"UserSuspension":{"properties":{"suspended":{"type":"boolean","title":"Suspended"},"reason":{"anyOf":[{"type":"string","maxLength":500},{"type":"null"}],"title":"Reason"}},"type":"object","required":["suspended"],"title":"UserSuspension","description":"Request model for user suspension."},"V2BatchRequest":{"properties":{"nodes":{"anyOf":[{"items":{"$ref":"#/components/schemas/NodeCreateRequest"},"type":"array"},{"type":"null"}],"title":"Nodes","description":"Nodes to create"},"edges":{"anyOf":[{"items":{"$ref":"#/components/schemas/EdgeCreateRequest"},"type":"array"},{"type":"null"}],"title":"Edges","description":"Edges to create"},"atomic":{"type":"boolean","title":"Atomic","description":"Execute all operations atomically","default":true}},"type":"object","title":"V2BatchRequest","description":"V2 Batch operations request."},"V2WritingResponse":{"properties":{"result":{"type":"string","title":"Result","description":"Generated text completion or rephrase"},"sources":{"anyOf":[{"items":{"$ref":"#/components/schemas/MatchedNode"},"type":"array"},{"type":"null"}],"title":"Sources","description":"Knowledge graph sources used for context (only when use_knowledge_base=true)"},"processing_metadata":{"additionalProperties":true,"type":"object","title":"Processing Metadata","description":"Processing details including timing, model used, etc."}},"type":"object","required":["result","processing_metadata"],"title":"V2WritingResponse","description":"Enhanced writing response with proper source attribution."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"VaultDocumentRequest":{"properties":{"text":{"type":"string","title":"Text","description":"Document text content"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title","description":"Document title"},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata","description":"Additional metadata"},"doc_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Doc Id","description":"Optional document ID (will be generated if not provided)"}},"type":"object","required":["text"],"title":"VaultDocumentRequest","description":"Request model for vault document operations."},"VaultDocumentResponse":{"properties":{"document_id":{"type":"string","title":"Document Id","description":"Document ID"},"status":{"type":"string","title":"Status","description":"Operation status"},"message":{"type":"string","title":"Message","description":"Human-readable status message"}},"type":"object","required":["document_id","status","message"],"title":"VaultDocumentResponse","description":"Response model for vault document operations."},"VaultStatsResponse":{"properties":{"document_count":{"type":"integer","title":"Document Count","description":"Total number of documents in vault"},"total_words":{"type":"integer","title":"Total Words","description":"Total word count across all documents"},"total_size_kb":{"type":"integer","title":"Total Size Kb","description":"Total size in kilobytes"},"document_ids":{"items":{"type":"string"},"type":"array","title":"Document Ids","description":"List of all document IDs"},"vault_path":{"type":"string","title":"Vault Path","description":"Vault directory path"},"last_updated":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Last Updated","description":"Last modification timestamp"}},"type":"object","required":["document_count","total_words","total_size_kb","document_ids","vault_path"],"title":"VaultStatsResponse","description":"Response model for vault statistics."},"app__frames__extraction__ExtractedFrame":{"properties":{"frame_type":{"type":"string","title":"Frame Type","description":"Type of the frame"},"text":{"type":"string","title":"Text","description":"Primary text content of this frame"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title","description":"Concise title or heading for this frame (required for all frames)"},"confidence":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Confidence","description":"Confidence in frame extraction"},"summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Summary","description":"Brief summary of this frame's content and significance"},"slot_confidence":{"anyOf":[{"$ref":"#/components/schemas/ConfidenceLevel"},{"type":"null"}],"description":"Confidence level (for claims, implications)"},"slot_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Type","description":"Type categorization (evidence type, question type, or source type)"},"slot_strength":{"anyOf":[{"$ref":"#/components/schemas/StrengthLevel"},{"type":"null"}],"description":"Strength assessment (for evidence, arguments)"},"slot_reliability":{"anyOf":[{"$ref":"#/components/schemas/ReliabilityLevel"},{"type":"null"}],"description":"Reliability assessment (for evidence, sources)"},"slot_scope":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Scope","description":"Scope or domain of applicability"},"slot_time":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Time","description":"Time/date information"},"slot_location":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Location","description":"Location/spatial information"},"slot_title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Title","description":"Title (for definitions, references)"},"slot_source":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Slot Source","description":"Source references or author names"},"slot_sequence":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Slot Sequence","description":"Steps or sequence items"},"slot_evidence_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Evidence Refs","description":"References to evidence frames that support this frame"},"slot_method_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Method Refs","description":"References to method frames"},"slot_example_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Example Refs","description":"References to example frames"},"slot_implication_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Implication Refs","description":"References to implication frames"},"source_span":{"anyOf":[{"items":{"type":"integer"},"type":"array","maxItems":2,"minItems":2},{"type":"null"}],"title":"Source Span","description":"Character span [start, end]"},"children":{"items":{"$ref":"#/components/schemas/app__frames__extraction__ExtractedFrame"},"type":"array","title":"Children","description":"Nested child frames"}},"additionalProperties":false,"type":"object","required":["frame_type","text","confidence"],"title":"ExtractedFrame","description":"A single extracted frame with nested children and properly typed slots."},"app__frames__extraction_dynamic__ExtractedFrame":{"properties":{"frame_type":{"type":"string","title":"Frame Type","description":"Type of the frame"},"text":{"type":"string","title":"Text","description":"Primary text content of this frame"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title","description":"Concise title or heading for this frame (required for all frames)"},"confidence":{"type":"number","maximum":1.0,"minimum":0.0,"title":"Confidence","description":"Confidence in frame extraction"},"summary":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Summary","description":"Brief summary of this frame's content and significance"},"slot_confidence":{"anyOf":[{"$ref":"#/components/schemas/ConfidenceLevel"},{"type":"null"}],"description":"Confidence level (for claims, implications)"},"slot_type":{"anyOf":[{"$ref":"#/components/schemas/EvidenceType"},{"$ref":"#/components/schemas/QuestionType"},{"$ref":"#/components/schemas/SourceType"},{"type":"null"}],"title":"Slot Type","description":"Type categorization (evidence type, question type, or source type)"},"slot_strength":{"anyOf":[{"$ref":"#/components/schemas/StrengthLevel"},{"type":"null"}],"description":"Strength assessment (for evidence, arguments)"},"slot_reliability":{"anyOf":[{"$ref":"#/components/schemas/ReliabilityLevel"},{"type":"null"}],"description":"Reliability assessment (for evidence, sources)"},"slot_scope":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Scope","description":"Scope or domain of applicability"},"slot_time":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Time","description":"Time/date information"},"slot_location":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Location","description":"Location/spatial information"},"slot_title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Slot Title","description":"Title (for definitions, references)"},"slot_source":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Slot Source","description":"Source references or author names"},"slot_sequence":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Slot Sequence","description":"Steps or sequence items"},"slot_evidence_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Evidence Refs","description":"References to evidence frames that support this frame"},"slot_method_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Method Refs","description":"References to method frames"},"slot_example_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Example Refs","description":"References to example frames"},"slot_implication_refs":{"anyOf":[{"items":{"$ref":"#/components/schemas/NestedFrameReference"},"type":"array"},{"type":"null"}],"title":"Slot Implication Refs","description":"References to implication frames"},"source_span":{"anyOf":[{"items":{"type":"integer"},"type":"array","maxItems":2,"minItems":2},{"type":"null"}],"title":"Source Span","description":"Character span [start, end]"},"children":{"items":{"$ref":"#/components/schemas/app__frames__extraction_dynamic__ExtractedFrame"},"type":"array","title":"Children","description":"Nested child frames"}},"additionalProperties":false,"type":"object","required":["frame_type","text","confidence"],"title":"ExtractedFrame","description":"A single extracted frame with nested children and properly typed slots."}},"securitySchemes":{"HTTPBearer":{"type":"http","scheme":"bearer"}}},"tags":[{"name":"Documents","description":"Manage and retrieve document content"},{"name":"Search","description":"Find content using intelligent semantic search"},{"name":"Graph Navigation","description":"Navigate knowledge graph relationships"},{"name":"Graph","description":"Direct graph database operations"},{"name":"Writing","description":"AI-powered content generation"},{"name":"Vault","description":"Obsidian vault integration"},{"name":"OAuth Authentication","description":"Auth0 OAuth authentication flow"},{"name":"System","description":"Health checks and system information"},{"name":"Jobs","description":"Background task management"}]}